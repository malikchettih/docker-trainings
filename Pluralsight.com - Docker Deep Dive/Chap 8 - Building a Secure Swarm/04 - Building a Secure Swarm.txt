-----------------------------------------------------------------
 Init Sawrm
-----------------------------------------------------------------

mchettih@ubuntu:~$ docker swarm init
Swarm initialized: current node (0a4m17nvx8v03pexibd13a5vi) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2zji9hq5m2n0kpr5ttzrwtcpi6nloc4ue7x6s9v6q2ybtjk5bt-22oi055pbnuqz0ihm90sl5pwu 192.168.38.143:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

-----------------------------------------------------------------
  Docker system info ! Swarm Active
-----------------------------------------------------------------

mchettih@ubuntu:~$ docker system info
Containers: 4
 Running: 2
 Paused: 0
 Stopped: 2
Images: 22
Server Version: 18.06.1-ce
Storage Driver: overlay2
 Backing Filesystem: extfs
 Supports d_type: true
 Native Overlay Diff: true
Logging Driver: json-file
Cgroup Driver: cgroupfs
Plugins:
 Volume: local
 Network: bridge host macvlan null overlay
 Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog
Swarm: active
 NodeID: 0a4m17nvx8v03pexibd13a5vi
 Is Manager: true
 ClusterID: jtnpeb6l3wblx3kmr7c9g5e7n
 Managers: 1
 Nodes: 1
 Orchestration:
  Task History Retention Limit: 5
 Raft:
  Snapshot Interval: 10000
  Number of Old Snapshots to Retain: 0
  Heartbeat Tick: 1
  Election Tick: 10
 Dispatcher:
  Heartbeat Period: 5 seconds
 CA Configuration:
  Expiry Duration: 3 months
  Force Rotate: 0
 Autolock Managers: false
 Root Rotation In Progress: false
 Node Address: 192.168.38.143
 Manager Addresses:
  192.168.38.143:2377
Runtimes: runc
Default Runtime: runc
Init Binary: docker-init
containerd version: 468a545b9edcd5932818eb9de8e72413e616e86e
runc version: 69663f0bd4b60df09991c08812a60108003fa340
init version: fec3683
Security Options:
 apparmor
 seccomp
  Profile: default
Kernel Version: 4.15.0-33-generic
Operating System: Ubuntu 18.04.1 LTS
OSType: linux
Architecture: x86_64
CPUs: 4
Total Memory: 15.64GiB
Name: ubuntu
ID: LTK2:B2V3:VZMF:7JDB:WWDD:ZG44:SQZE:HU33:ZMGU:5FSN:XKUE:7PK2
Docker Root Dir: /var/lib/docker
Debug Mode (client): false
Debug Mode (server): false
HTTP Proxy: http://mchettih:2408Nael!!201514@10.41.254.251:8080/
Username: malikchettih
Registry: https://index.docker.io/v1/
Labels:
Experimental: false
Insecure Registries:
 192.168.38.143:5000
 127.0.0.0/8
Live Restore Enabled: false

WARNING: No swap limit support

-----------------------------------------------------------------
  Docker list nodes
-----------------------------------------------------------------
mchettih@ubuntu:~$ docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION
0a4m17nvx8v03pexibd13a5vi *   ubuntu              Ready               Active              Leader              18.06.1-ce

-----------------------------------------------------------------
  Docker: add manager command
-----------------------------------------------------------------
chettih@ubuntu:~$ docker swarm join-token manager
To add a manager to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2zji9hq5m2n0kpr5ttzrwtcpi6nloc4ue7x6s9v6q2ybtjk5bt-a9gh38xsftupq6xbanjn2pa2a 192.168.38.143:2377

-----------------------------------------------------------------
 Docker: manager join token
-----------------------------------------------------------------

mchettih@ubuntu:~$ docker swarm join-token manager
To add a manager to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2zji9hq5m2n0kpr5ttzrwtcpi6nloc4ue7x6s9v6q2ybtjk5bt-a9gh38xsftupq6xbanjn2pa2a 192.168.38.143:2377

-----------------------------------------------------------------
 Docker: worker join token
-----------------------------------------------------------------

mchettih@ubuntu:~$ docker swarm join-token worker
To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2zji9hq5m2n0kpr5ttzrwtcpi6nloc4ue7x6s9v6q2ybtjk5bt-22oi055pbnuqz0ihm90sl5pwu 192.168.38.143:2377

-----------------------------------------------------------------
 Docker: rotate  token
-----------------------------------------------------------------

mchettih@ubuntu:~$ docker swarm join-token --rotate worker
Successfully rotated worker join token.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2zji9hq5m2n0kpr5ttzrwtcpi6nloc4ue7x6s9v6q2ybtjk5bt-51nigz94gcnt88klefv9ikbby 192.168.38.143:2377

-----------------------------------------------------------------
 Docker: read swarm node certificate
-----------------------------------------------------------------

mchettih@ubuntu:~$ sudo openssl x509 -in /var/lib/docker/swarm/certificates/swarm-node.crt -text
[sudo] Mot de passe de mchettihÂ :
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            2a:e2:f2:02:3e:7a:dc:f4:db:08:20:76:b1:7a:a7:4d:41:ba:b3:f7
    Signature Algorithm: ecdsa-with-SHA256
        Issuer: CN = swarm-ca
        Validity
            Not Before: Aug 31 13:59:00 2018 GMT
            Not After : Nov 29 14:59:00 2018 GMT
        Subject: O = jtnpeb6l3wblx3kmr7c9g5e7n, OU = swarm-manager, CN = 0a4m17nvx8v03pexibd13a5vi
        Subject Public Key Info:
            Public Key Algorithm: id-ecPublicKey
                Public-Key: (256 bit)
                pub:
                    04:36:c0:91:1b:46:33:4e:29:49:78:8c:c7:09:69:
                    4d:ff:37:4b:e8:fc:4f:8f:a2:39:f6:6c:d7:17:3f:
                    40:53:85:04:b0:6d:92:f6:93:e5:0d:f3:57:06:9f:
                    d0:2b:fc:f1:7d:20:41:1f:fc:5e:23:6c:13:56:68:
                    0a:70:83:32:a6
                ASN1 OID: prime256v1
                NIST CURVE: P-256
        X509v3 extensions:
            X509v3 Key Usage: critical
                Digital Signature, Key Encipherment
            X509v3 Extended Key Usage:
                TLS Web Server Authentication, TLS Web Client Authentication
            X509v3 Basic Constraints: critical
                CA:FALSE
            X509v3 Subject Key Identifier:
                74:B1:2F:7E:E5:43:38:D5:76:B3:59:61:93:33:6C:C2:94:E0:AD:A1
            X509v3 Authority Key Identifier:
                keyid:0A:3A:00:48:68:39:F7:8D:09:5D:65:6C:5F:98:B0:AD:2F:B6:CA:63

            X509v3 Subject Alternative Name:
                DNS:swarm-manager, DNS:0a4m17nvx8v03pexibd13a5vi, DNS:swarm-ca
    Signature Algorithm: ecdsa-with-SHA256
         30:45:02:21:00:b5:f0:dc:af:2c:ef:45:2d:63:a3:bb:d3:09:
         20:17:28:b3:3c:8f:ad:33:a5:2b:b8:21:a9:e0:0b:8e:0a:0b:
         ea:02:20:6c:a5:f4:1b:23:48:d2:7b:0b:b0:05:12:70:a3:9e:
         51:81:d6:6b:55:d1:dd:0f:45:3b:4d:b2:77:90:b5:0c:5d
-----BEGIN CERTIFICATE-----
MIICNTCCAdugAwIBAgIUKuLyAj563PTbCCB2sXqnTUG6s/cwCgYIKoZIzj0EAwIw
EzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTgwODMxMTM1OTAwWhcNMTgxMTI5MTQ1
OTAwWjBgMSIwIAYDVQQKExlqdG5wZWI2bDN3Ymx4M2ttcjdjOWc1ZTduMRYwFAYD
VQQLEw1zd2FybS1tYW5hZ2VyMSIwIAYDVQQDExkwYTRtMTdudng4djAzcGV4aWJk
MTNhNXZpMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAENsCRG0YzTilJeIzHCWlN
/zdL6PxPj6I59mzXFz9AU4UEsG2S9pPlDfNXBp/QK/zxfSBBH/xeI2wTVmgKcIMy
pqOBvzCBvDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsG
AQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFHSxL37lQzjVdrNZYZMzbMKU
4K2hMB8GA1UdIwQYMBaAFAo6AEhoOfeNCV1lbF+YsK0vtspjMD0GA1UdEQQ2MDSC
DXN3YXJtLW1hbmFnZXKCGTBhNG0xN252eDh2MDNwZXhpYmQxM2E1dmmCCHN3YXJt
LWNhMAoGCCqGSM49BAMCA0gAMEUCIQC18NyvLO9FLWOju9MJIBcoszyPrTOlK7gh
qeALjgoL6gIgbKX0GyNI0nsLsAUScKOeUYHWa1XR3Q9FO02yd5C1DF0=
-----END CERTIFICATE-----

-----------------------------------------------------------------
 Docker: lock the swarm
-----------------------------------------------------------------

mchettih@ubuntu:~$ docker swarm update --autolock=true
Swarm updated.
To unlock a swarm manager after it restarts, run the `docker swarm unlock`
command and provide the following key:

    SWMKEY-1-KAitGk4Uz8GdMNT90r/RyE6I19Vp7jDinR4sc52tNsM

Please remember to store this key in a password manager, since without it you
will not be able to restart the manager.
mchettih@ubuntu:~$ sudo service docker restart
mchettih@ubuntu:~$ docker node ls
Error response from daemon: Swarm is encrypted and needs to be unlocked before it can be used. Please use "docker swarm unlock" to unlock it.

-----------------------------------------------------------------
 Docker: unlock the swarm
-----------------------------------------------------------------

mchettih@ubuntu:~$ docker swarm unlock
Please enter unlock key:
mchettih@ubuntu:~$ docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION
0a4m17nvx8v03pexibd13a5vi *   ubuntu              Ready               Active              Leader              18.06.1-ce

-----------------------------------------------------------------
 Docker: Change certificate expiry policy
-----------------------------------------------------------------

mchettih@ubuntu:~$ docker swarm update --cert-expiry 48h
Swarm updated.
mchettih@ubuntu:~$ docker system info
Containers: 4
 Running: 0
 Paused: 0
 Stopped: 4
Images: 22
Server Version: 18.06.1-ce
Storage Driver: overlay2
 Backing Filesystem: extfs
 Supports d_type: true
 Native Overlay Diff: true
Logging Driver: json-file
Cgroup Driver: cgroupfs
Plugins:
 Volume: local
 Network: bridge host macvlan null overlay
 Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog
Swarm: active
 NodeID: 0a4m17nvx8v03pexibd13a5vi
 Is Manager: true
 ClusterID: jtnpeb6l3wblx3kmr7c9g5e7n
 Managers: 1
 Nodes: 1
 Orchestration:
  Task History Retention Limit: 5
 Raft:
  Snapshot Interval: 10000
  Number of Old Snapshots to Retain: 0
  Heartbeat Tick: 1
  Election Tick: 10
 Dispatcher:
  Heartbeat Period: 5 seconds
 CA Configuration:
  Expiry Duration: 2 days
  Force Rotate: 0
 Autolock Managers: true
 Root Rotation In Progress: false
 Node Address: 192.168.38.143
 Manager Addresses:
  192.168.38.143:2377
Runtimes: runc
Default Runtime: runc
Init Binary: docker-init
containerd version: 468a545b9edcd5932818eb9de8e72413e616e86e
runc version: 69663f0bd4b60df09991c08812a60108003fa340
init version: fec3683
Security Options:
 apparmor
 seccomp
  Profile: default
Kernel Version: 4.15.0-33-generic
Operating System: Ubuntu 18.04.1 LTS
OSType: linux
Architecture: x86_64
CPUs: 4
Total Memory: 15.64GiB
Name: ubuntu
ID: LTK2:B2V3:VZMF:7JDB:WWDD:ZG44:SQZE:HU33:ZMGU:5FSN:XKUE:7PK2
Docker Root Dir: /var/lib/docker
Debug Mode (client): false
Debug Mode (server): false
HTTP Proxy: http://mchettih:2408Nael!!201514@10.41.254.251:8080/
Username: malikchettih
Registry: https://index.docker.io/v1/
Labels:
Experimental: false
Insecure Registries:
 192.168.38.143:5000
 127.0.0.0/8
Live Restore Enabled: false

WARNING: No swap limit support
mchettih@ubuntu:~$
